# Netlify redirects. See https://www.netlify.com/docs/redirects/
{{/* cSpell:ignore cond wordmark */ -}}

{{ range $p := .Site.Pages -}}

{{ range $p.Params.redirects -}}
  {{ $from := cond (strings.HasPrefix .from "/")
      .from
      (print $p.RelPermalink .from) -}}
  {{ $to := cond (strings.HasPrefix .to "/")
      .to
      (print $p.RelPermalink .to) -}}
  {{ $from | printf "%-35s" }} {{ $to }}
{{ end -}}

{{ range $p.Aliases -}}
{{/* Temporary workaround for semconv alias errors */ -}}
{{ if strings.HasPrefix . "docs/specs/semconv/general" -}}
{{ . | printf "%-35s" }} {{ $p.RelPermalink }}
{{ else -}}
{{ $alias := cond (strings.HasPrefix . "/")
    .
    (partial "relative-redirects-alias" (dict "alias" . "p" $p.Parent)) -}}
{{ $alias | printf "%-35s" }} {{ $p.RelPermalink }}
{{ end -}}
{{ end -}}

{{ with $p.Params.redirect -}}
  {{ $p.RelPermalink | printf "%-35s" }} {{ . }}
{{ end -}}

{{ end }}{{/* range $p */ -}}

{{ $languages := (.Site.GetPage "/docs/instrumentation").Pages -}}
{{ range $languages -}}
{{ $lang := .File.ContentBaseName -}}
{{ if ne $lang "other" -}}
/docs/{{ $lang }}   /docs/instrumentation/{{ $lang }}
/docs/{{ $lang }}/*  /docs/instrumentation/{{ $lang }}/:splat
{{ end -}}
{{ end -}}

/docs/reference/specification    /docs/specs/otel
/docs/reference/specification/*  /docs/specs/otel/:splat
/docs/specification/otel/*       /docs/specs/otel/:splat

{{ $schemaFiles := partial "schema-file-list" . -}}
{{ $latestSchemaFile := index $schemaFiles 0 -}}

/schemas/latest  /schemas/{{ $latestSchemaFile.Name }}

{{/*
  Social-media image redirects. As mentioned in
  https://developers.facebook.com/docs/sharing/webmasters/images, we need to
  preserve og:image (and other social media image) URLs forever.
*/ -}}

{{ $og_image_current := `/img/social/logo-wordmark-001.png` -}}

/featured-background.jpg  {{ $og_image_current }} {{- /* homepage og:image used prior to 2022/08 */}}

{{- define "partials/relative-redirects-alias" -}}
  {{ $result := "" }}
  {{ if strings.HasPrefix .alias "../" }}
    {{ $result = (partial "relative-redirects-alias"
          (dict
            "alias" (strings.TrimPrefix "../" .alias)
            "p" .p.Parent ))
    }}
  {{ else }}
    {{ $result = path.Join .p.RelPermalink .alias }}
  {{ end }}
  {{ return $result }}
{{ end }}
