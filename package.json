{
  "spelling": "cSpell:ignore docsy HTMLTEST hugo netlify prebuild precheck preinstall postbuild -",
  "Notes": [
    "The 'all' and 's' scripts are conveniences for use until the following",
    "is fixed: https://github.com/mysticatea/npm-run-all/issues/209.",
    "That is, from the command line, you can use, e.g.: npm run s <arguments>."
  ],
  "scripts": {
    "_build": "hugo --cleanDestinationDir -e dev -DFE",
    "_check-links": "make check-links",
    "_get:no": "echo SKIPPING get operation",
    "_get:submodule:non-lang": "npm run _get:submodule -- content-modules/opentelemetry-specification themes/docsy",
    "_get:submodule": "set -x && git submodule update --init ${DEPTH:- --depth 1}",
    "_prebuild": "run-s get:submodule cp:spec",
    "_prepare:docsy": "cd themes/docsy && npm install",
    "_serve:hugo": "hugo serve -DFE --minify",
    "_serve": "netlify dev -c \"npm run _serve:hugo\"",
    "all": "npm-run-all",
    "build:preview": "set -x && npm run _build -- --minify --baseURL \"${DEPLOY_PRIME_URL:-/}\"",
    "build:production": "hugo --cleanDestinationDir --minify",
    "build": "npm run _build",
    "cd:public": "cd public &&",
    "check-links:all": "HTMLTEST_ARGS= npm run _check-links",
    "check-links": "npm run _check-links",
    "clean": "make clean",
    "cp:spec": "./scripts/cp-spec-pages.sh",
    "get:submodule": "npm run _get:${GET:-submodule}",
    "make:public": "make public ls-public",
    "postbuild:preview": "npm run _check-links",
    "postbuild:production": "npm run _check-links",
    "prebuild:preview": "npm run _prebuild",
    "prebuild:production": "npm run _prebuild",
    "prebuild": "npm run _prebuild",
    "precheck-links:all": "npm run build",
    "precheck-links": "npm run build",
    "prepare": "run-s get:submodule _prepare:docsy",
    "preserve:hugo": "npm run _prebuild",
    "preserve": "npm run _prebuild",
    "s": "run-s",
    "schemas:update": "npm run update:submodule content-modules/opentelemetry-specification",
    "serve:hugo": "npm run _serve:hugo",
    "serve": "npm run _serve",
    "test": "npm run check-links",
    "update:pkg:hugo": "npm install --save-dev --save-exact hugo-extended@latest",
    "update:pkg:hugo+": "npm install --save-dev autoprefixer@latest postcss@latest postcss-cli@latest",
    "update:pkg:netlify": "npm install --save-dev netlify-cli@latest",
    "update:pkg:other": "npm install --save-dev npm-run-all@latest",
    "update:submodule:lang": "run-s update:submodule _get:submodule:non-lang",
    "update:submodule": "set -x && git submodule update --remote ${DEPTH:- --depth 1}"
  },
  "private": true,
  "prettier": {
    "proseWrap": "always"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.7",
    "hugo-extended": "0.101.0",
    "netlify-cli": "^11.4.0",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.4.14",
    "postcss-cli": "^10.0.0",
    "prettier": "^2.6.2"
  },
  "dependencies": {
    "@opentelemetry/api": "^1.0.1",
    "@opentelemetry/auto-instrumentations-web": "^0.30.0",
    "@opentelemetry/context-zone": "^1.0.1",
    "@opentelemetry/core": "^1.0.1",
    "@opentelemetry/exporter-trace-otlp-http": "^0.29.2",
    "@opentelemetry/instrumentation": "^0.29.2",
    "@opentelemetry/resources": "^1.0.1",
    "@opentelemetry/sdk-trace-base": "^1.0.1",
    "@opentelemetry/sdk-trace-web": "^1.0.1",
    "@opentelemetry/semantic-conventions": "^1.0.1"
  }
}
