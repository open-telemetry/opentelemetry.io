{
  "spelling": "cSpell:ignore docsy elemetry HTMLTEST hugo loglevel netlify prebuild precheck preinstall postbuild postget textlint -",
  "Notes": [
    "The 'all' runs _all_ named scripts in sequence, even if one fails; and exits with failure in that case."
  ],
  "scripts": {
    "__check:links": "make --keep-going check-links",
    "_build": "hugo --cleanDestinationDir -e dev -DFE",
    "_check:format:any": "npx prettier --check --ignore-path ''",
    "_check:format": "npx prettier --check .",
    "_check:links--md": "npx markdown-link-check --config .markdown-link-check.json *.md",
    "_check:links--warn": "npm run _check:links || (echo; echo 'WARNING: see link-checker output for issues.'; echo)",
    "_check:links:internal": "npm run __check:links",
    "_check:links": "HTMLTEST_ARGS='--log-level 1' npm run __check:links",
    "_check:text": "npx textlint content data `ls *.md`",
    "_diff:check": "git diff --name-only --exit-code",
    "_diff:fail": "git diff --name-only --exit-code || exit 1",
    "_fail": "exit 1",
    "_filename-error": "echo 'ERROR: the following files violate naming conventions; fix using: `npm run fix:filenames`'; echo; npm run -s _ls-bad-filenames; exit 1",
    "_get:no": "echo SKIPPING get operation",
    "_get:submodule:non-lang": "npm run _get:submodule -- content-modules/opentelemetry-specification themes/docsy",
    "_get:submodule": "set -x && git submodule update --init ${DEPTH:- --depth 1}",
    "_list:check:*": "npm run --loglevel=warn | grep -Ee '^\\s*check:[^:]+$'",
    "_list:fix:*": "npm run --loglevel=warn | grep -Ee '^\\s*fix:[^:]+$'",
    "_ls-bad-filenames": "find assets content static -name '*_*' ! -name '_*'",
    "_prebuild": "npm run seq -- get:submodule cp:spec",
    "_prepare:docsy": "cd themes/docsy && npm install",
    "_prettier:any": "npx prettier --ignore-path ''",
    "_rename-to-kebab-case": "find assets content static -name '*_*' ! -name '_*' -exec sh -c 'mv \"$1\" \"${1//_/-}\"' _ {} \\;",
    "_serve:hugo": "hugo server -DFE --minify",
    "_serve:netlify": "netlify dev -c \"npm run _serve:hugo\"",
    "all": "bash -c 'x=0; for c in \"$@\"; do npm run $c || x=$((x+1)); done; ((!x)) || (echo \"ERROR: some scripts failed!\" && exit 1)' -",
    "build:preview": "set -x && npm run _build -- --minify --baseURL \"${DEPLOY_PRIME_URL:-/}\"",
    "build:production": "hugo --cleanDestinationDir --minify",
    "build": "npm run _build",
    "cd:public": "cd public &&",
    "check:filenames": "test -z \"$(npm run -s _ls-bad-filenames)\" || npm run -s _filename-error",
    "check:format": "npm run _check:format || (echo '[help] Run: npm run fix:format'; exit 1)",
    "check:links:internal": "npm run _check:links:internal",
    "check:links": "npm run _check:links",
    "check:markdown": "npx gulp lint-md",
    "check:spelling": "npx cspell --no-progress -c .vscode/cspell.json content data 'layouts/**/*.md'",
    "check:text": "npm run _check:text -- ",
    "check": "npm run seq -- $(npm run -s _list:check:*)",
    "clean": "make clean",
    "cp:spec": "./scripts/content-modules/cp-pages.sh",
    "diff:check": "npm run _diff:check || (echo; echo 'WARNING: the files above have not been committed'; echo)",
    "diff:fail": "npm run _diff:check || (echo; echo 'ERROR: the files above have changed. Locally rerun `npm run test-and-fix` and commit changes'; echo; exit 1)",
    "fix:dict": "find content layouts -name \"*.md\" -print0 | xargs -0 ./scripts/normalize-cspell-front-matter.pl",
    "fix:filenames": "npm run _rename-to-kebab-case",
    "fix:format": "npm run format",
    "fix:markdown": "npm run check:markdown -- --fix",
    "fix": "npm run seq -- $(npm -s run _list:fix:*)",
    "format": "npm run _check:format -- --write",
    "get:submodule": "npm run _get:${GET:-submodule}",
    "install:netlify-cli": "npm list netlify-cli || npm install netlify-cli",
    "log:check:links": "npm run check:links | tee tmp/build-log.txt",
    "make:public": "make public ls-public",
    "postbuild:preview": "npm run _check:links--warn",
    "postbuild:production": "npm run _check:links--warn",
    "postget:submodule": "git submodule",
    "prebuild:preview": "npm run _prebuild",
    "prebuild:production": "npm run _prebuild",
    "prebuild": "npm run _prebuild",
    "precheck:links:internal": "npm run build",
    "precheck:links": "npm run build",
    "prepare": "npm run seq -- get:submodule _prepare:docsy",
    "preserve:hugo": "npm run _prebuild",
    "preserve:netlify": "npm run seq -- _prebuild install:netlify-cli",
    "schemas:update": "npm run update:submodule content-modules/opentelemetry-specification",
    "seq": "bash -c 'for cmd in \"$@\"; do npm run $cmd || exit 1; done' - ",
    "serve:hugo": "npm run _serve:hugo",
    "serve:netlify": "npm run _serve:netlify",
    "serve": "npm run serve:hugo",
    "test-and-fix": "npm run seq -- check fix:dict fix:filenames",
    "test": "npm run check",
    "update:pkg:docsy-dep": "npm install --save-dev autoprefixer@latest postcss-cli@latest",
    "update:pkg:hugo": "npm install --save-dev --save-exact hugo-extended@latest",
    "update:pkg:hugo+": "npm run update:pkg:hugo && npm run update:pkg:docsy-dep",
    "update:pkg:netlify": "npm install --save-optional netlify-cli@latest",
    "update:pkg:other": "npm install --save-dev gulp@latest",
    "update:submodule:lang": "npm run seq -- update:submodule _get:submodule:non-lang",
    "update:submodule": "set -x && git submodule update --remote ${DEPTH:- --depth 1}"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.16",
    "cspell": "^8.0.0",
    "gulp": "^4.0.2",
    "hugo-extended": "0.120.4",
    "markdown-link-check": "^3.11.2",
    "markdownlint": "^0.31.1",
    "postcss-cli": "^10.1.0",
    "prettier": "^3.0.3",
    "require-dir": "^1.2.0",
    "textlint": "^13.3.3",
    "textlint-filter-rule-allowlist": "^4.0.0",
    "textlint-filter-rule-comments": "^1.2.2",
    "textlint-rule-terminology": "^4.0.1",
    "through2": "^4.0.2",
    "yargs": "^17.7.2"
  },
  "dependencies": {
    "@opentelemetry/api": "^1.3.0",
    "@opentelemetry/auto-instrumentations-web": "^0.33.0",
    "@opentelemetry/context-zone": "^1.8.0",
    "@opentelemetry/core": "^1.8.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.44.0",
    "@opentelemetry/instrumentation": "^0.44.0",
    "@opentelemetry/resources": "^1.8.0",
    "@opentelemetry/sdk-trace-base": "^1.8.0",
    "@opentelemetry/sdk-trace-web": "^1.8.0",
    "@opentelemetry/semantic-conventions": "^1.8.0"
  },
  "optionalDependencies": {
    "netlify-cli": "^17.0.1"
  },
  "enginesComment": "Ensure that engines.node value stays consistent with the project's .nvmrc",
  "engines": {
    "node": "20.x"
  },
  "gitHubActionCacheKey": "2023-07-13 - change this key to force cache refresh",
  "private": true,
  "prettier": {
    "proseWrap": "always",
    "singleQuote": true
  }
}
