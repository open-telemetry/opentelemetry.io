name: Check links and refcache # cSpell:ignore refcache

on:
  pull_request:

jobs:
  build-and-check-links:
    name: BUILD and CHECK LINKS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name:
          Create NPM cache-hash input file and reduced-dependencies package.json
        run: |
          mkdir -p tmp
          jq '{devDependencies, dependencies, engines, gitHubActionCacheCounter}' package.json > tmp/package-ci.json
          jq 'del(.devDependencies[] | select(test("spell|gulp|netlify|prettier|require|text")))' package.json > tmp/package2.json
          mv tmp/package2.json package.json

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: tmp/package-ci.json

      - run: npm install
      - run: git restore package.json
      - run: npm run build | tee tmp/build-log.txt
      - run: npm run _check:links

      - name: Upload build log
        uses: actions/upload-artifact@v2
        with:
          name: build-log-etc
          path: |
            tmp/build-log.txt
            tmp/.htmltest/refcache.json

  check-refcache:
    name: REFCACHE updates?
    needs: build-and-check-links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download build log
        uses: actions/download-artifact@v2
        with:
          name: build-log-etc
          path: tmp

      - name: Fail on uncommitted refcache changes
        run: |
          make refcache-restore
          npm run diff:fail

  check-build-log-for-issues:
    name: WARNINGS in build log?
    needs: build-and-check-links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download build log
        uses: actions/download-artifact@v2
        with:
          name: build-log-etc
          path: tmp

      - name: Check for warnings or errors in build log
        run: make check-build-log;
