# this is useful because notifications for scheduled workflows are only sent to the user who
# initially created the given workflow
name: Reusable - Workflow notification

on:
  workflow_call:
    inputs:
      success:
        type: boolean
        required: true
      repo:
        type: string
        required: false
    secrets:
      opentelemetrybot_github_token:
        required: false

jobs:
  workflow-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Open issue or add comment if issue already open
        env:
          # need to use opentelemetrybot token when opening issues in other repos
          GH_TOKEN:
            ${{ secrets.opentelemetrybot_github_token || secrets.GITHUB_TOKEN }}
        run: |
          if [ -z "${{ inputs.repo }}" ]; then
            repo="$GITHUB_REPOSITORY"
            title="Workflow failed: $GITHUB_WORKFLOW"
            body="See [$GITHUB_WORKFLOW #$GITHUB_RUN_NUMBER](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)."
          else
            repo="${{ inputs.repo }}"
            title="Workflow failed: $GITHUB_REPOSITORY $GITHUB_WORKFLOW"
            body="See [$GITHUB_REPOSITORY $GITHUB_WORKFLOW #$GITHUB_RUN_NUMBER](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)."
          fi

          # TODO (trask) search doesn't support exact phrases, so it's possible that this could grab the wrong issue
          number=$(gh issue list --repo $repo --search "in:title $title" --limit 1 --json number -q .[].number)

          echo $number
          echo ${{ inputs.success }}

          if [[ $number ]]; then
            if [[ "${{ inputs.success }}" == "true" ]]; then
              gh issue close $number \
                             --repo $repo
            else
              gh issue comment $number \
                               --repo $repo \
                               --body "$body"
            fi
          elif [[ "${{ inputs.success }}" == "false" ]]; then
            gh issue create --repo $repo \
                            --title "$title (#$GITHUB_RUN_NUMBER)" \
                            --body "$body"
          fi
